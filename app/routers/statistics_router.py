"""
–†–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ —É Telegram –±–æ—Ç—ñ
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from app.db.models import PeriodType
from app.statistics_sender import StatisticsSender

statistics_router = Router()


@statistics_router.message(Command('stats'))
async def cmd_stats(message: Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /stats"""
    user_id = str(message.from_user.id)
    await message.answer("–í–∏–±–µ—Ä–∏ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä—ñ–æ–¥:", reply_markup={
        "inline_keyboard": [
            [
                {"text": "–ó–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å", "callback_data": "stats_weekly"},
                {"text": "–ó–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º—ñ—Å—è—Ü—å", "callback_data": "stats_monthly"}
            ]
        ]
    })


@statistics_router.callback_query(F.data == "stats_weekly")
async def process_weekly_stats(callback: CallbackQuery):
    """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–∏–∂–Ω–µ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –∑–∞–ø–∏—Ç–æ–º"""
    await callback.answer("–ì–µ–Ω–µ—Ä—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å, –∑–∞—á–µ–∫–∞–π—Ç–µ...")
    user_id = str(callback.from_user.id)
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
    await callback.message.answer("–ì–µ–Ω–µ—Ä—É—é –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å...")
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    sender = StatisticsSender(callback.bot)
    result = await sender.send_weekly_statistics_to_user(user_id)
    
    if not result:
        await callback.message.answer("–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")


@statistics_router.callback_query(F.data == "stats_monthly")
async def process_monthly_stats(callback: CallbackQuery):
    """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –º—ñ—Å—è—á–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –∑–∞–ø–∏—Ç–æ–º"""
    await callback.answer("–ì–µ–Ω–µ—Ä—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º—ñ—Å—è—Ü—å, –∑–∞—á–µ–∫–∞–π—Ç–µ...")
    user_id = str(callback.from_user.id)
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
    await callback.message.answer("–ì–µ–Ω–µ—Ä—É—é –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º—ñ—Å—è—Ü—å...")
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    sender = StatisticsSender(callback.bot)
    result = await sender.send_monthly_statistics_to_user(user_id)
    
    if not result:
        await callback.message.answer("–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –º—ñ—Å—è—á–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º
@statistics_router.message(Command('send_stats_to_all'))
async def cmd_send_stats_to_all(message: Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /send_stats_to_all"""
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    admin_ids = ["379872548"]  # –î–æ–¥–∞–π—Ç–µ ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤
    if str(message.from_user.id) not in admin_ids:
        await message.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return
    
    await message.answer("–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º:", reply_markup={
        "inline_keyboard": [
            [
                {"text": "–¢–∏–∂–Ω–µ–≤–∞ –¥–ª—è –≤—Å—ñ—Ö", "callback_data": "send_weekly_all"},
                {"text": "–ú—ñ—Å—è—á–Ω–∞ –¥–ª—è –≤—Å—ñ—Ö", "callback_data": "send_monthly_all"}
            ]
        ]
    })


@statistics_router.callback_query(F.data == "send_weekly_all")
async def process_send_weekly_all(callback: CallbackQuery):
    """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–∏–∂–Ω–µ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º"""
    admin_ids = ["379872548"]  # –î–æ–¥–∞–π—Ç–µ ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤
    if str(callback.from_user.id) not in admin_ids:
        await callback.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –¥—ñ—ó.")
        return
    
    await callback.answer("–†–æ–∑–ø–æ—á–∏–Ω–∞—é –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º...")
    await callback.message.answer("–†–æ–∑–ø–æ—á–∏–Ω–∞—é –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–∏–∂–Ω–µ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º.\n–¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å.")
    
    from app.statistics_sender import send_weekly_statistics_to_all_users
    results = await send_weekly_statistics_to_all_users(callback.bot)
    
    await callback.message.answer(
        f"–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–∏–∂–Ω–µ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:\n"
        f"‚úÖ –£—Å–ø—ñ—à–Ω–æ: {results['success']}\n"
        f"‚ùå –ù–µ–≤–¥–∞–ª–æ: {results['failed']}\n"
        f"üìä –í—Å—å–æ–≥–æ: {results['total']}"
    )


@statistics_router.callback_query(F.data == "send_monthly_all")
async def process_send_monthly_all(callback: CallbackQuery):
    """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –º—ñ—Å—è—á–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º"""
    admin_ids = ["379872548"]  # –î–æ–¥–∞–π—Ç–µ ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤
    if str(callback.from_user.id) not in admin_ids:
        await callback.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –¥—ñ—ó.")
        return
    
    await callback.answer("–†–æ–∑–ø–æ—á–∏–Ω–∞—é –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º...")
    await callback.message.answer("–†–æ–∑–ø–æ—á–∏–Ω–∞—é –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –º—ñ—Å—è—á–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º.\n–¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å.")
    
    from app.statistics_sender import send_monthly_statistics_to_all_users
    results = await send_monthly_statistics_to_all_users(callback.bot)
    
    await callback.message.answer(
        f"–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –º—ñ—Å—è—á–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:\n"
        f"‚úÖ –£—Å–ø—ñ—à–Ω–æ: {results['success']}\n"
        f"‚ùå –ù–µ–≤–¥–∞–ª–æ: {results['failed']}\n"
        f"üìä –í—Å—å–æ–≥–æ: {results['total']}"
    )
